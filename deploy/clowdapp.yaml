---
apiVersion: v1
kind: Template
metadata:
  name: approval
objects:
- apiVersion: v1
  kind: Secret # For ephemeral/local environment
  metadata:
    name: approval-api-secrets
    labels:
      app: approval
  stringData:
    encryption-key: "${ENCRYPTION_KEY}"
    secret-key: "${SECRET_KEY}"
    rbac-psk: "psk"
- apiVersion: v1
  kind: Secret # For ephemeral/local environment
  metadata:
    name: approval-pam-secrets
  stringData:
    kie-admin-user: "${KIE_ADMIN_USER}"
    kie-admin-pwd: "${KIE_ADMIN_PASSWORD}"
    kie-server-user: "${KIE_SERVER_USER}"
    kie-server-pwd: "${KIE_SERVER_PASSWORD}"

- apiVersion: cloud.redhat.com/v1alpha1
  kind: ClowdApp
  metadata:
    name: approval
  spec:
    envName: ${ENV_NAME}
    deployments:
    - name: api
      minReplicas: ${{MIN_REPLICAS}}
      webServices:
        public:
          enabled: True
      podSpec:
        image: ${IMAGE}:${IMAGE_TAG}
        env:
        - name: APP_NAME
          value: ${APP_NAME}
        - name: PATH_PREFIX
          value: ${PATH_PREFIX}
        - name: BYPASS_RBAC
          value: ${BYPASS_RBAC}
        - name: APPROVAL_PROCESS_URL
          value: ${APPROVAL_PROCESS_SCHEME}://${APPROVAL_PROCESS_HOST}:${APPROVAL_PROCESS_PORT}
        - name: CATALOG_URL
          value: ${CATALOG_SCHEME}://${CATALOG_HOST}:${CATALOG_PORT}
        - name: SOURCES_URL
          value: ${SOURCES_SCHEME}://${SOURCES_HOST}:${SOURCES_PORT}
        - name: CATALOG_INVENTORY_URL
          value: ${CATALOG_INVENTORY_SCHEME}://${CATALOG_INVENTORY_HOST}:${CATALOG_INVENTORY_PORT}
        - name: KIE_SERVER_USERNAME
          valueFrom:
            secretKeyRef:
              name: approval-pam-secrets
              key: kie-server-user
        - name: KIE_SERVER_PASSWORD
          valueFrom:
            secretKeyRef:
              name: approval-pam-secrets
              key: kie-server-pwd
        - name: APPROVAL_WEB_LOGO
          value: https://www.redhat.com/profiles/rh/themes/redhatdotcom/img/logo.svg
        - name: APPROVAL_WEB_PRODUCT
          value: Automation Services Catalog
        - name: ENCRYPTION_KEY
          valueFrom:
            secretKeyRef:
              name: approval-api-secrets
              key: encryption-key
        - name: SECRET_KEY_BASE
          valueFrom:
            secretKeyRef:
              name: approval-api-secrets
              key: secret-key
        - name: RBAC_PSK
          valueFrom:
            secretKeyRef:
              name: approval-api-secrets
              key: rbac-psk
        - name: RAILS_LOG_LEVEL
          value: ${RAILS_LOG_LEVEL}
        - name: RAILS_SERVE_STATIC_FILES
          value: "true"
        readinessProbe:
          tcpSocket:
            port: 8000
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 120
          periodSeconds: 10
          failureThreshold: 6
        resources:
          limits:
            cpu: 200m
            memory: 1Gi
          requests:
            cpu: 100m
            memory: 500Mi
    kafkaTopics:
    - replicas: 3
      partitions: 10
      topicName: platform.approval
    database:
      name: approval
    dependencies:
    - rbac
parameters:
- name: CLOWDER_ENABLED
  description: Determines Clowder deployment
  value: "True"
- name: ENV_NAME
  description: ClowdEnv Name
  required: false
- name: APP_NAME
  displayName: Application Name
  description: Application name to be used in request paths. Only used when PATH_PREFIX is also specified.
  value: approval
- name: BYPASS_RBAC
  displayName: Bypass RBAC
  description: Boolean value that determines whether RBAC should be bypassed.
  value: 'false'
- name: IMAGE
  displayName: Image
  description: Image name
  value: quay.io/cloudservices/approval-api
- name: IMAGE_TAG
  value: latest
- name: PATH_PREFIX
  displayName: Path Prefix
  description: Base path for the API
  value: api
- name: RAILS_LOG_LEVEL
  displayName: Log level for RAILS
  description: The valid log levels are info, debug, warn, error
  value: "info"
- name: SOURCES_HOST
  displayName: Sources Service Host
  description: Host to use for the Sources service URL.
  value: sources-api
- name: SOURCES_PORT
  displayName: Sources Service Port
  description: Port to use for the Sources service URL.
  value: "8000"
- name: SOURCES_SCHEME
  displayName: Sources Service Scheme
  description: Scheme to use for the SOURCES service URL. Can be either http or https
  value: http
- name: CATALOG_INVENTORY_HOST
  displayName: Catalog Inventory Host
  description: Host to use for the catalog inventory service URL.
  value: catalog-inventory-api
- name: CATALOG_INVENTORY_PORT
  displayName: Catalog Inventory Port
  description: Port to use for the catalog inventory service URL.
  value: "8000"
- name: CATALOG_INVENTORY_SCHEME
  displayName: Catalog Inventory Scheme
  description: Scheme to use for the catalog inventory service URL. Can be either http or https
  value: http
- name: CATALOG_HOST
  displayName: Catalog Service Host
  description: Host to use for the Catalog service URL.
  value: catalog-api
- name: CATALOG_PORT
  displayName: Catalog Service Port
  description: Port to use for the Catalog service URL.
  value: "8000"
- name: CATALOG_SCHEME
  displayName: Catalog Service Scheme
  description: Scheme to use for the Catalog service URL. Can be either http or https
  value: http
- name: APPROVAL_PROCESS_HOST
  displayName: Approval Process Service Host
  description: Host to use for the Approval process service URL.
  value: approval-process-pam
- name: APPROVAL_PROCESS_PORT
  displayName: Approval Process Service Port
  description: Port to use for the Approval process service URL.
  value: "8000"
- name: APPROVAL_PROCESS_SCHEME
  displayName: Approval Process Service Scheme
  description: Scheme to use for the Approval process service URL. Can be either http or https
  value: http
- name: MIN_REPLICAS
  description: The number of replicas to use in the deployment
  value: "1"
- name: ENCRYPTION_KEY
  displayName: Encryption Key (Ephemeral)
  required: true
  description: Encryption Key for Passwords
  from: "[a-zA-Z0-9]{43}"
  generate: expression
- name: SECRET_KEY
  displayName: Secret Key (Ephemeral)
  required: true
  description: Rails SECRET_KEY_BASE
  from: "[a-f0-9]{128}"
  generate: expression
- name: KIE_SERVER_USER
  displayName: Kie Server Username (Ephemeral)
  required: true
  description: Kie Server Username
  from: "[a-f0-9]{8}"
  generate: expression
- name: KIE_SERVER_PASSWORD
  displayName: Kie Server Password (Ephemeral)
  required: true
  description: Kie Server Password
  from: "[a-f0-9]{7}!"
  generate: expression
- name: KIE_ADMIN_USER
  displayName: Kie Admin Username (Ephemeral)
  required: true
  description: Kie Admin Username
  from: "[a-f0-9]{8}"
  generate: expression
- name: KIE_ADMIN_PASSWORD
  displayName: Kie Admin Password (Ephemeral)
  required: true
  description: Kie Admin Password
  from: "[a-f0-9]{7}!"
  generate: expression
